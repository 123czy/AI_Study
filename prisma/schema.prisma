generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String            @id @default(uuid())
  name      String
  email     String            @unique
  password  String
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
  content   String            @db.Text
  aiSummary String            @db.Text
  records   InterviewRecord[]

  @@index([email])
}

model InterviewSession {
  id                 String            @id @default(uuid())
  startTime          DateTime
  endTime            DateTime?
  status             String            @default("pending")
  currentStep        Int               @default(0)
  totalDuration      Int               @default(0)
  pausedDuration     Int               @default(0)
  notes              String?           @db.Text
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  candidateName      String?
  position           String?
  interviewer        String?
  technicalScore     Float?
  communicationScore Float?
  overallScore       Float?
  records            InterviewRecord[]
}

model InterviewRecord {
  id        String           @id @default(uuid())
  userId    String
  sessionId String
  step      Int
  content   String           @db.Text
  timestamp DateTime         @default(now())
  type      String
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  session   InterviewSession @relation(fields: [sessionId], references: [id])
  user      User             @relation(fields: [userId], references: [id])

  @@index([sessionId])
  @@index([userId], map: "InterviewRecord_userId_fkey")
}

model PdfDocument {
  id         String   @id @default(cuid())
  fileName   String
  fileUrl    String
  fileType   String
  fileSize   Int
  uploadedAt DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("pdf_documents")
}

model JobRequirement {
  id         String   @id @default(cuid())
  jobTitle   String
  pdfUrl     String
  pdfContent String   @db.Text
  fileName   String
  questions  String   @db.Text
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("job_requirements")
}

model InterViewer {
  id        String   @id @default(cuid())
  name      String
  email     String
  jobTitle  String
  content   String   @db.Text
  aiSummary String?  @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("interviewers")
}
